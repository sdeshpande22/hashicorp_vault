$primary_ns_ips = @()
$secondary_ns_ips = @()
$standalone_ns_ips = @()
$HAdevice_ns_ips = @()

# Arrays for HA device pairs and standalone devices
$HADevicePairs = @()
$StandaloneDevices = @()

foreach ($Netscaler in $Netscalers) {
    $deviceinfo = (Invoke-RestMethod -Uri "https://$($Global:ADM)/nitro/v2/config/ns?filter=ip_address:$Netscaler" -Method Get -WebSession $admSession.websession -ErrorAction Stop).ns

    if ($deviceinfo.instance_mode -eq "Primary" -and $deviceinfo.is_ha_configured -eq $true) {
        CTX-Logging-DisplayPipelineUpdate -Message "$($deviceinfo.hostname) Primary HA Device Added"
        $primary_ns_ips += $Netscaler
    }
    elseif ($deviceinfo.instance_mode -eq "Secondary" -and $deviceinfo.is_ha_configured -eq $true) {
        CTX-Logging-DisplayPipelineUpdate -Message "$($deviceinfo.hostname) Secondary HA Device Added"
        $secondary_ns_ips += $Netscaler

        # Find the corresponding primary and pair them
        $primaryKey = $primary_ns_ips | Where-Object { $_ -eq $Netscaler }
        if ($primaryKey) {
            $HADevicePairs += "$primaryKey-$Netscaler"
        }
    }
    elseif ($deviceinfo.instance_mode -eq "Primary" -and $deviceinfo.is_ha_configured -eq $false) {
        CTX-Logging-DisplayPipelineUpdate -Message "$($deviceinfo.hostname) Standalone Device Added"
        $StandaloneDevices += $Netscaler
    }
}

# Create the final DeviceMapping with HA pairs and standalone devices, comma-separated
$DeviceMapping = $HADevicePairs + $StandaloneDevices

# Output or use $DeviceMapping as needed
$DeviceMapping
