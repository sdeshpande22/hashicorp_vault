pipeline {
    agent any
    parameters {
        string(name: 'USERNAME', defaultValue: '', description: 'Username for authentication')
        credentials(name: 'PASSWORD', defaultValue: '', description: 'Password for authentication', credentialType: 'Username with password', required: true)
    }
    stages {
        stage('Run JMeter Test') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'PASSWORD', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        sh 'jmeter -n -t my_test.jmx -Jusername=${USERNAME} -Jpassword=${PASSWORD}'
                    }
                }
            }
        }
    }
}

pipeline {
    agent any
    
    stages {
        stage('Check JMeter Version and Path') {
            steps {
                script {
                    def jmeterVersion = sh(script: 'jmeter -v | grep "version"', returnStdout: true).trim()
                    def jmeterPath = sh(script: 'which jmeter', returnStdout: true).trim()
                    echo "JMeter Version: ${jmeterVersion}"
                    echo "JMeter Path: ${jmeterPath}"
                }
            }
        }
    }
}
