from zeep import Client
from zeep.transports import Transport
from requests_ntlm import HttpNtlmAuth
import requests
import xml.etree.ElementTree as ET

# === Configuration ===
report_path = "/MyFolder/MyReport"
username = "DOMAIN\\your.username"
password = "your_password"
soap_wsdl = "https://reportingsitesrv.hbeu.adroot.hsbc:8080/ReportServer_SSRS/ReportExecution2005.asmx?wsdl"

# === Setup Client ===
session = requests.Session()
session.auth = HttpNtlmAuth(username, password)
session.verify = False
transport = Transport(session=session)

client = Client(wsdl=soap_wsdl, transport=transport)
service = client.service

# === 1. Load Report ===
exec_info = service.LoadReport(Report=report_path, HistoryID=None)
execution_id = exec_info.ExecutionID

# === 2. Prepare Parameters with EXACT XML Structure ===
parameters = [
    {
        'Name': 'Machine',
        'Value': 'YOUR_ACTUAL_MACHINE_NAME',  # MUST REPLACE THIS
        'Label': 'Machine'
    },
    {
        'Name': 'AuthListID',
        'Value': 'ScopeId_60845866-1528-4686-8ABF-38488A17BD09/AuthList_395326c5-e8f4-4321-b0e0-2f32536b6832',
        'Label': 'AuthList'
    }
]

# === 3. Set Parameters with STRICT XML FORMATTING ===
# Manually build the SOAP XML to ensure perfect structure
params_xml = """
<Parameters xmlns="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices">
    {params}
</Parameters>
""".format(
    params=''.join([
        f"""
        <Parameter>
            <Name>{p['Name']}</Name>
            <Value>{p['Value']}</Value>
        </Parameter>
        """ for p in parameters
    ])
)

# === 4. Execute with Manual XML ===
# First reset execution to ensure clean state
service.ResetExecution(ExecutionID=execution_id)

# Set parameters using the raw XML
set_response = service.SetExecutionParameters(
    ExecutionID=execution_id,
    Parameters=params_xml,
    ParameterLanguage='en-us'
)

# === 5. Render Report ===
render_response = service.Render(
    ExecutionID=execution_id,
    Format='CSV',
    DeviceInfo='',
    Extension='',
    StreamId=''
)

# === 6. Save Output ===
with open("report.csv", "wb") as f:
    f.write(render_response.Result)

print("âœ… Report successfully generated")
