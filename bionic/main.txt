async function handleUrlInput() {
    const url = document.getElementById("inputUrl").value;
    if (!url) {
        alert("Please enter a valid URL.");
        return;
    }
    
    const formData = new FormData();
    formData.append("url", url);

    try {
        const response = await fetch("/url", {
            method: "POST",
            body: formData
        });
        const data = await response.json();
        
        if (response.ok) {
            displayBionicText(data.bionic_text);  // Display only bionic text
        } else {
            throw new Error("Failed to fetch or process the URL.");
        }
    } catch (error) {
        console.error("Error processing URL input:", error);
        alert("Error processing URL input.");
    }
}


# Endpoint to handle URL input
@app.post("/url")
async def fetch_url_content(url: str = Form(...)):
    try:
        # Fetch content from the URL
        if not url:
            raise HTTPException(status_code=400, detail="URL is required")
        
        response = requests.get(url)
        response.raise_for_status()
        
        # Parse and extract main text content from the HTML
        soup = BeautifulSoup(response.text, "html.parser")
        text = soup.get_text(separator=" ", strip=True)
        
        processed_text = process_bionic_reader(text)
        return {"bionic_text": processed_text}
    except requests.RequestException as e:
        raise HTTPException(status_code=400, detail=f"Failed to fetch the URL content. Error: {e}")
    except Exception as e:
        raise HTTPException(status_code=400, detail=f"An unexpected error occurred: {e}")


proxies = {
    'http': 'http://proxy_address:port',
    'https': 'https://proxy_address:port',
}

response = requests.get(url, proxies=proxies)
