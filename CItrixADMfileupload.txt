$file_path = "C:\path\to\your\file\largefile.tar.gz"
$admIp = "<ADM-IP>"

# URL for the authentication and upload endpoints
$authUrl = "https://$admIp/nitro/v2/config/login"
$uploadUrl = "https://$admIp/nitro/v2/config/ns_image?action=upload"

# Credentials for authentication
$username = "your-username"
$password = "your-password"

# Chunk size in bytes (e.g., 5MB)
$chunkSize = 5MB

try {
    # Step 1: Authenticate and Obtain Session ID
    $authBody = @{
        username = $username
        password = $password
    } | ConvertTo-Json

    # Send authentication request
    $authResponse = Invoke-WebRequest -Uri $authUrl -Method Post -Body $authBody -ContentType "application/json" -UseBasicParsing
    $authResponseJson = $authResponse.Content | ConvertFrom-Json
    $sessionId = $authResponseJson.sessionid

    if ($null -eq $sessionId) {
        Write-Output "Failed to obtain session ID. Response: $($authResponse.Content)"
        exit
    }

    Write-Output "Obtained session ID: $sessionId"

    # Step 2: Upload File in Chunks Using Session ID
    $fileStream = [System.IO.File]::OpenRead($file_path)
    $fileSize = $fileStream.Length
    $totalChunks = [math]::Ceiling($fileSize / $chunkSize)
    $buffer = New-Object byte[] $chunkSize
    $chunkIndex = 0

    while ($bytesRead = $fileStream.Read($buffer, 0, $chunkSize)) {
        $chunkIndex++
        
        # Prepare headers
        $headers = @{
            "Cookie" = "NITRO_AUTH_TOKEN=$sessionId"
        }

        # Prepare multipart form data
        $boundary = [System.Guid]::NewGuid().ToString()
        $multipartContent = "--$boundary`r`n"
        $multipartContent += "Content-Disposition: form-data; name=`"file`"; filename=`"$(Split-Path $file_path -Leaf)`"`r`n"
        $multipartContent += "Content-Type: application/octet-stream`r`n`r`n"
        $multipartContent += [System.Text.Encoding]::UTF8.GetString($buffer, 0, $bytesRead)
        $multipartContent += "`r`n--$boundary--`r`n"

        # Convert multipart content to byte array
        $multipartBytes = [System.Text.Encoding]::UTF8.GetBytes($multipartContent)

        # Send the chunk upload request
        $uploadResponse = Invoke-WebRequest -Uri $uploadUrl -Method Post -Body $multipartBytes -Headers $headers -ContentType "multipart/form-data; boundary=$boundary" -UseBasicParsing

        # Log response details for debugging
        Write-Output "Uploading chunk $chunkIndex/$totalChunks"
        Write-Output "Response status code: $($uploadResponse.StatusCode)"
        Write-Output "Response content: $($uploadResponse.Content)"

        if ($uploadResponse.StatusCode -ne 200) {
            Write-Output "Failed to upload chunk $chunkIndex. Status code: $($uploadResponse.StatusCode)"
            Write-Output "Response content: $($uploadResponse.Content)"
            break
        }
    }

    Write-Output "File uploaded successfully in $chunkIndex chunks"

} catch {
    Write-Output "Error uploading file: $_"
} finally {
    if ($fileStream) { $fileStream.Dispose() }
}
