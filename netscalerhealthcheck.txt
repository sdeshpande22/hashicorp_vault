# Define the NetScaler device IP address
$netscalerIP = "192.168.1.1"
$username = "your_username"
$password = "your_password"

# Define threshold values
$cpuThreshold = 80       # CPU usage percentage threshold
$memThreshold = 80       # Memory usage percentage threshold
$diskThreshold = 85      # Disk usage percentage threshold
$diskErrorThreshold = 1  # Disk error count threshold

# Function to get NetScaler stats via Nitro API
function Get-NetScalerStats {
    param (
        [string]$resource
    )

    $url = "https://$netscalerIP/nitro/v1/stat/$resource"
    $headers = @{
        'X-NITRO-USER' = $username
        'X-NITRO-PASS' = $password
    }

    $response = Invoke-RestMethod -Uri $url -Method Get -Headers $headers -SkipCertificateCheck
    return $response
}

# Function to check CPU, memory, and disk space
function Check-NetscalerHealth {
    # Get system stats
    $systemStats = Get-NetScalerStats -resource "system"

    # Extracting CPU and Memory usage
    $cpuUsage = $systemStats.system.cpuusagepcnt
    $memUsage = $systemStats.system.memusagepcnt

    # Get disk space usage
    $diskStats = Get-NetScalerStats -resource "nsrpudisk"
    $diskUsage = $diskStats.nsrpudisk.useddiskpcnt
    $diskErrors = $diskStats.nsrpudisk.diskerrcount

    # Display the results
    Write-Output "NetScaler Health Check:"
    Write-Output "========================"

    # Check CPU usage
    if ($cpuUsage -ge $cpuThreshold) {
        Write-Output "WARNING: CPU Usage is high at $cpuUsage% (Threshold: $cpuThreshold%)"
    } else {
        Write-Output "CPU Usage: $cpuUsage% (Normal)"
    }

    # Check Memory usage
    if ($memUsage -ge $memThreshold) {
        Write-Output "WARNING: Memory Usage is high at $memUsage% (Threshold: $memThreshold%)"
    } else {
        Write-Output "Memory Usage: $memUsage% (Normal)"
    }

    # Check Disk usage
    if ($diskUsage -ge $diskThreshold) {
        Write-Output "WARNING: Disk Usage is high at $diskUsage% (Threshold: $diskThreshold%)"
    } else {
        Write-Output "Disk Usage: $diskUsage% (Normal)"
    }

    # Check Disk Errors
    if ($diskErrors -ge $diskErrorThreshold) {
        Write-Output "WARNING: Disk Errors detected - $diskErrors errors (Threshold: $diskErrorThreshold)"
    } else {
        Write-Output "Disk Errors: $diskErrors (Normal)"
    }
}

# Run the health check function
Check-NetscalerHealth
